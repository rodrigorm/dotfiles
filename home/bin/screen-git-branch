#!/usr/bin/env bash

# fastest possible way to check if repo is dirty
screen_git_dirty() {
	# check if we're in a git repo
	command git rev-parse --is-inside-work-tree &>/dev/null || return
	# check if it's dirty
	[[ "$PURE_GIT_UNTRACKED_DIRTY" == 0 ]] && local umode="-uno" || local umode="-unormal"
	command test -n "$(git status --porcelain --ignore-submodules ${umode})"

	(($? == 0)) && echo '\005{+ .R}*\005{-}' || echo '\005{+ .g}-\005{-}'
}

screen_git_pull() {
    local arrows=''

    # check check if there is anything to pull
    command git fetch &> /dev/null &

    # check if we're in a git repo
    command git rev-parse --is-inside-work-tree &>/dev/null &&
    # check if there is an upstream configured for this branch
    command git rev-parse --abbrev-ref @'{u}' &>/dev/null && {
        (( $(command git rev-list --right-only --count HEAD...@'{u}' 2>/dev/null) > 0 )) && arrows='<-'
        (( $(command git rev-list --left-only --count HEAD...@'{u}' 2>/dev/null) > 0 )) && arrows+='->'

        if [ "${arrows}" = "<-->" ]; then
            arrows="<->"
        fi

        if [ "${arrows}" != "" ]; then
            echo -e " ${arrows}"
        fi
    }
}

git status > /dev/null || exit
echo -e "$(git branch | cut -d ' ' -f 2)|$(screen_git_dirty)\005{+ .C}$(screen_git_pull)\005{-}"
